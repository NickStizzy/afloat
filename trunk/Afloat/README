Afloat.   Adds to OS X what Apple forgot.
=======

Welcome to Afloat's home. This file contains information on the contents of this repository and best practices and procedures for working with it.


 == CONTENTS
 

 === Getting the Code
 
   The project is hosted by Google Code's Project Hosting facility. The main page and issue tracker for the project is available at <http://code.google.com/p/afloat> and other information about the open source project can be found at the Afloat Project home page at <http://millenomi.altervista.org/Afloat/Project/>.
   
   If you want the source code (you might already have it, but this readme is likely to be linked on the site so you might NOT have it), Subversion is required. Codingmonkeys.de's Mathias ... provides Mac packages for the latest version, so just grab it at <...> and go.
   
   Once you have Subversion, open the Terminal, and download the code by issuing the command:
   
   svn co http://afloat.googlecode.com/trunk/ "Afloat Home"

   This will create an Afloat Home folder in your home folder. You can move this around if you wish.
   
   
    === The repository.
 
Two words for the uninitiated: a repository is a versioned collection of files (including all of their histories and changes throughout time). This repository contains the source code, files and tools that can be used to build the most current version of Afloat. This repository is organized in three distinct parts: a trunk, that contains the most up-to-date experimental source code (which will eventually form the finished product, Afloat); branches, that is, deviations from the trunk that contain experimental or administrative changes that should not affect regular development; and tags, that mark the state of the trunk or a branch in a particular moment of time.

With this out of the way, this shows the contents of the repository's trunk. It is possible, although unlikely, that branches and older tags differ significantly from it.

 Afloat/
 	Source/
 		Afloat.xcodeproj
 		...
 	Localization/
 		...
 	Packaging/
 		...
 	Website/
 		...
 	Knowledge Base/
 		...
 	WorkTools/
 		...
 	
The subfolders contain the following material:

 - Source/ contains the source code for Afloat. Although it can be modified with any text editor, modifying and building the project is only possible on a Mac (PPC or Intel) with Tiger and Xcode 2.3.
   Later versions of Xcode may be compatible (especially any 2.x > 2.3). Previous versions of Xcode or OS X **ARE NOT** compatible.

 - Localization/ contains localized strings in continuous localization packages meant to be used with Blue Technologies' free Localization Manager. See blue-tec.com and the documentation inside the folder for more information.
 
 - Packaging/ contains template DMGs, backdrops and other support files that are necessary to create a disk image for binary distribution. Although the process may be automated in the future, it isn't now.
 
 - Website/ contains the source material for the main web site, millenomi.altervista.org/Afloat. It does not contain everything (in particular it does not contain the logging mechanisms), but it contains a great deal of source material.
 
 - Knowledge Base/ will be the home for Afloat's future knowledge base and documentation.
 
 - WorkTools/ contains a few tools that are useful or required in order to build parts of Afloat. Pagepress, one such tool, produces a variety of static or dynamic web pages from a single template and a set of variations (localizations), and is highly useful on its own. It also contains Report, a program that makes it easy for external contributors to provide their own code and enhancements upstream.
 
 
 === Contributing
 
    Maybe you have written some interesting changes to Afloat. The main changes come in two flavors: source code and everything else.
    
    Source code-only changes can be packed and sent using the Report tool. In the Terminal, use the cd command to enter the Afloat subfolder of your working copy, then issue the following commands:
    
    svn update    # Make sure your version is the latest!    
    WorkTools/Report > report.patch
    
    The report.patch text file will be created; it will contain all changes and further information about the patching that is needed to apply it correctly. It can be merged with the trunk by an administrator checking out the revision that the report refers to, applying it with the patch -p0 command, updating to the latest revision via svn update and then commiting (provided all conflicts are resolved).
    
    